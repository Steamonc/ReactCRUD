{"ast":null,"code":"/**\n * Reducer\n * @param {Array} todos 更新される直前のTODOリスト\n * @param {Object} action どのような更新かを示す[action.type]と更新された値及び項目を示すプロパティを格納\n */\nexport const reducer = (todos, action) => {\n  switch (action.type) {\n    // 初回読み込み時にAPIからGETしたTODOオブジェクトリストをそのまま反映\n    case 'INIT_TODO':\n      return action.todos;\n    // 現在のTODOリスト配列の最後尾に、渡されたテキストを反映したTODOを追加\n\n    case 'ADD_TODO':\n      return [...todos, {\n        text: action.text,\n        isComplete: false\n      }];\n    // クリックされたボタンが何番目かを示すindexを元に、該当の配列を除いたTODOリストを作成\n\n    case 'REMOVE_TODO':\n      const newTodos = [];\n\n      for (let i = 0; i < todos.length; i++) {\n        if (action.index !== i) {\n          newTodos.push(todos[i]);\n        }\n      }\n\n      return newTodos;\n    // クリックされたボタンが何番目かを示すindexを元に、該当のTODOのisCompleteを反転させる\n\n    case 'TOGGLE_TODO':\n      return todos.map((todo, index) => {\n        if (action.index === index) {\n          return Object.assign({}, todo, {\n            isComplete: !todo.isComplete\n          });\n        }\n\n        return todo;\n      });\n\n    default:\n      return [...todos];\n  }\n};","map":{"version":3,"names":["reducer","todos","action","type","text","isComplete","newTodos","i","length","index","push","map","todo","Object","assign"],"sources":["/Users/steonc/react_drill/crud-todo/src/reducer/reducer.js"],"sourcesContent":["/**\n * Reducer\n * @param {Array} todos 更新される直前のTODOリスト\n * @param {Object} action どのような更新かを示す[action.type]と更新された値及び項目を示すプロパティを格納\n */\n export const reducer = (todos, action) => {\n    switch(action.type) {\n      // 初回読み込み時にAPIからGETしたTODOオブジェクトリストをそのまま反映\n      case 'INIT_TODO':\n        return action.todos\n      // 現在のTODOリスト配列の最後尾に、渡されたテキストを反映したTODOを追加\n      case 'ADD_TODO':\n        return [...todos, {\n          text: action.text,\n          isComplete: false\n        }]\n      // クリックされたボタンが何番目かを示すindexを元に、該当の配列を除いたTODOリストを作成\n      case 'REMOVE_TODO':\n        const newTodos = []\n        for (let i = 0; i < todos.length; i++) {\n          if (action.index !== i) {\n            newTodos.push(todos[i])\n          }\n        }\n        return newTodos\n      // クリックされたボタンが何番目かを示すindexを元に、該当のTODOのisCompleteを反転させる\n      case 'TOGGLE_TODO':\n        return todos.map((todo, index) => {\n          if (action.index === index) {\n            return Object.assign({}, todo, {\n              isComplete: !todo.isComplete\n            })\n          }\n          return todo\n        })\n      default:\n        return [...todos]\n    }\n  }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACC,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACvC,QAAOA,MAAM,CAACC,IAAd;IACE;IACA,KAAK,WAAL;MACE,OAAOD,MAAM,CAACD,KAAd;IACF;;IACA,KAAK,UAAL;MACE,OAAO,CAAC,GAAGA,KAAJ,EAAW;QAChBG,IAAI,EAAEF,MAAM,CAACE,IADG;QAEhBC,UAAU,EAAE;MAFI,CAAX,CAAP;IAIF;;IACA,KAAK,aAAL;MACE,MAAMC,QAAQ,GAAG,EAAjB;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;QACrC,IAAIL,MAAM,CAACO,KAAP,KAAiBF,CAArB,EAAwB;UACtBD,QAAQ,CAACI,IAAT,CAAcT,KAAK,CAACM,CAAD,CAAnB;QACD;MACF;;MACD,OAAOD,QAAP;IACF;;IACA,KAAK,aAAL;MACE,OAAOL,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOH,KAAP,KAAiB;QAChC,IAAIP,MAAM,CAACO,KAAP,KAAiBA,KAArB,EAA4B;UAC1B,OAAOI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwB;YAC7BP,UAAU,EAAE,CAACO,IAAI,CAACP;UADW,CAAxB,CAAP;QAGD;;QACD,OAAOO,IAAP;MACD,CAPM,CAAP;;IAQF;MACE,OAAO,CAAC,GAAGX,KAAJ,CAAP;EA9BJ;AAgCD,CAjCK"},"metadata":{},"sourceType":"module"}